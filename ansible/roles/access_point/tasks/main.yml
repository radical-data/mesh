---
- name: Install AP and DHCP packages
  apt:
    name:
      - hostapd
      - dnsmasq
      - bridge-utils
    state: present
    update_cache: yes

- name: Ensure {{ wifi_ap_interface }} exists
  command: ip link show {{ wifi_ap_interface }}
  register: wlan1_status
  changed_when: false
  failed_when: wlan1_status.rc != 0

- name: Unblock Wi-Fi radios
  command: rfkill unblock all

- name: Stop interfering services
  systemd:
    name: wpa_supplicant
    enabled: false
    state: stopped

- name: Set {{ wifi_ap_interface }} to AP mode
  shell: |
    ip link set {{ wifi_ap_interface }} down
    iw dev {{ wifi_ap_interface }} set type __ap
    ip link set {{ wifi_ap_interface }} up

- name: Ensure bridge interface exists
  command: brctl addbr {{ wifi_bridge }}
  args:
    creates: "/sys/class/net/{{ wifi_bridge }}"

- name: Check if {{ wifi_ap_interface }} is already in bridge
  shell: brctl show {{ wifi_bridge }} | grep -q {{ wifi_ap_interface }}
  register: wlan_bridge_check
  ignore_errors: true
  changed_when: false

- name: Add {{ wifi_ap_interface }} to bridge
  command: brctl addif {{ wifi_bridge }} {{ wifi_ap_interface }}
  when: wlan_bridge_check.rc != 0

- name: Check if bat0 is already in bridge
  shell: brctl show {{ wifi_bridge }} | grep -q bat0
  register: bat_bridge_check
  ignore_errors: true
  changed_when: false

- name: Add bat0 to bridge
  command: brctl addif {{ wifi_bridge }} bat0
  when: bat_bridge_check.rc != 0

- name: Bring up bridge and interfaces
  shell: |
    ip link set {{ wifi_ap_interface }} up
    ip link set bat0 up
    ip link set {{ wifi_bridge }} up

- name: Flush previous IPs from bridge
  shell: ip addr flush dev {{ wifi_bridge }}
  when: wifi_bridge in ansible_interfaces

- name: Assign static IP to bridge
  shell: ip addr add {{ wifi_bridge_ip }}/23 dev {{ wifi_bridge }}
  register: bridge_ip_result
  changed_when: true

- name: Install bridge startup script
  template:
    src: bridge-ap.sh.j2
    dest: /usr/local/sbin/bridge-ap.sh
    mode: "0755"

- name: Install systemd unit to persist bridge on boot
  template:
    src: bridge-ap.service.j2
    dest: /etc/systemd/system/bridge-ap.service
    mode: "0644"

- name: Enable systemd bridge service
  systemd:
    name: bridge-ap.service
    enabled: true
    daemon_reload: true

- name: Configure hostapd
  copy:
    dest: /etc/hostapd/hostapd.conf
    content: |
      interface={{ wifi_ap_interface }}
      ssid={{ wifi_ap_ssid }}
      hw_mode=g
      channel={{ wifi_ap_channel }}
      macaddr_acl=0
      auth_algs=1
      ignore_broadcast_ssid=0
    mode: "0644"

- name: Set hostapd default config path
  lineinfile:
    path: /etc/default/hostapd
    regexp: "^DAEMON_CONF="
    line: 'DAEMON_CONF="/etc/hostapd/hostapd.conf"'

- name: Unmask hostapd
  systemd:
    name: hostapd
    masked: no

- name: Enable and start hostapd
  systemd:
    name: hostapd
    enabled: true
    state: restarted

- name: Configure dnsmasq
  copy:
    dest: /etc/dnsmasq.d/ap.conf
    content: |
      interface={{ wifi_bridge }}
      dhcp-range={{ wifi_dhcp_range_start }},{{ wifi_dhcp_range_end }},255.255.254.0,12h
      domain-needed
      bogus-priv
    mode: "0644"
  notify: Restart dnsmasq

- name: Ensure dnsmasq is enabled and started
  systemd:
    name: dnsmasq
    enabled: true
    state: started
  notify: Restart dnsmasq
